//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.03.20 at 02:46:45 PM PDT 
//


/*
 * Copyright 2012 MarkLogic Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.marklogic.client.config.search.jaxb;

import java.util.List;
import java.util.Vector;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element ref="{http://marklogic.com/appservices/search}parse"/>
 *         &lt;choice>
 *           &lt;element ref="{http://marklogic.com/appservices/search}start-facet"/>
 *           &lt;element ref="{http://marklogic.com/appservices/search}finish-facet"/>
 *         &lt;/choice>
 *         &lt;element ref="{http://marklogic.com/appservices/search}facet-option"/>
 *         &lt;element ref="{http://marklogic.com/appservices/search}term-option"/>
 *         &lt;element ref="{http://marklogic.com/appservices/search}annotation"/>
 *       &lt;/choice>
 *       &lt;attribute name="facet" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement
@XmlType(name = "", propOrder = {
    "parseOrStartFacetOrFinishFacet"
})
public class Custom {

    @XmlElementRefs({
        @XmlElementRef(name = "annotation", namespace = "http://marklogic.com/appservices/search", type = Annotation.class),
        @XmlElementRef(name = "facet-option", namespace = "http://marklogic.com/appservices/search", type = JAXBElement.class),
        @XmlElementRef(name = "parse", namespace = "http://marklogic.com/appservices/search", type = Parse.class),
        @XmlElementRef(name = "term-option", namespace = "http://marklogic.com/appservices/search", type = JAXBElement.class),
        @XmlElementRef(name = "start-facet", namespace = "http://marklogic.com/appservices/search", type = StartFacet.class),
        @XmlElementRef(name = "finish-facet", namespace = "http://marklogic.com/appservices/search", type = FinishFacet.class)
    })
    protected List<Object> parseOrStartFacetOrFinishFacet = new Vector<Object>();
    @XmlAttribute(name = "facet", required = true)
    protected boolean facet;

    /**
     * Gets the value of the parseOrStartFacetOrFinishFacet property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parseOrStartFacetOrFinishFacet property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParseOrStartFacetOrFinishFacet().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Parse }
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * {@link StartFacet }
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * {@link QueryAnnotation }
     * {@link FinishFacet }
     * 
     * 
     */
    public List<Object> getParseOrStartFacetOrFinishFacet() {
        if (parseOrStartFacetOrFinishFacet == null) {
            parseOrStartFacetOrFinishFacet = new Vector<Object>();
        }
        return this.parseOrStartFacetOrFinishFacet;
    }

    public boolean isSetParseOrStartFacetOrFinishFacet() {
        return ((this.parseOrStartFacetOrFinishFacet!= null)&&(!this.parseOrStartFacetOrFinishFacet.isEmpty()));
    }

    public void unsetParseOrStartFacetOrFinishFacet() {
        this.parseOrStartFacetOrFinishFacet = null;
    }

    /**
     * Gets the value of the facet property.
     * 
     */
    public boolean isFacet() {
        return facet;
    }

    /**
     * Sets the value of the facet property.
     * 
     */
    public void setFacet(boolean value) {
        this.facet = value;
    }

    public boolean isSetFacet() {
        return true;
    }

}
